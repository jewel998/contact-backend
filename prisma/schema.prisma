// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  account Account?        @relation()
  tenants TenantAccount[] @relation()

  @@map("user")
}

model Account {
  id       String  @id
  password String?

  disabled  Boolean
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user           User            @relation(fields: [id], references: [id], onDelete: Cascade)
  linkedAccounts LinkedAccount[] @relation()
  sessions       Session[]       @relation()

  @@index([id, disabled])
  @@map("account")
}

model LinkedAccount {
  id             String
  email          String   @unique
  provider       String
  providerUserId String?  @map("provider_user_id")
  status         String
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  account Account @relation(fields: [id], references: [id], onDelete: Cascade)

  @@id([id, email])
  @@index([email, status])
  @@map("linked_accounts")
}

model Session {
  id     String @id @default(cuid())
  userId String @map("user_id")

  disabled  Boolean
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  expiresAt DateTime @map("expires_at")

  account Account @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("session")
}

model Tenant {
  id        String   @id @default(cuid())
  icon      String?
  name      String
  slug      String   @unique
  createdBy String   @map("created_by")
  updatedBy String   @map("updated_by")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  accounts TenantAccount[]
  contacts Contact[]
}

model TenantAccount {
  id        String   @id @default(cuid())
  tenantId  String   @map("tenant_id")
  userId    String   @map("user_id")
  createdBy String   @map("created_by")
  updatedBy String   @map("updated_by")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([tenantId, userId])
}

model Contact {
  id        String   @id @default(cuid())
  tenantId  String
  firstName String
  lastName  String
  createdBy String   @map("created_by")
  updatedBy String   @map("updated_by")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  emails ContactEmail[]
  phones ContactPhone[]
  notes  ContactNote[]
  tenant Tenant         @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([tenantId, createdAt])
}

model ContactEmail {
  id        String   @id @default(cuid())
  contactId String   @map("contact_id")
  label     String   @default("work")
  email     String
  isPrimary Boolean  @default(false)
  createdBy String   @map("created_by")
  updatedBy String   @map("updated_by")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  contact Contact @relation(fields: [contactId], references: [id], onDelete: Cascade)

  @@unique([contactId, email])
  @@index([email])
}

model ContactPhone {
  id          String   @id @default(cuid())
  contactId   String   @map("contact_id")
  label       String   @default("mobile")
  countryCode String?
  number      String
  isPrimary   Boolean  @default(false)
  createdBy String   @map("created_by")
  updatedBy String   @map("updated_by")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  contact Contact @relation(fields: [contactId], references: [id], onDelete: Cascade)

  @@unique([contactId, number])
  @@index([number])
}

model ContactNote {
  id        String   @id @default(cuid())
  contactId String   @map("contact_id")
  body      String
  format    String
  createdBy String   @map("created_by")
  updatedBy String   @map("updated_by")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  contact Contact @relation(fields: [contactId], references: [id], onDelete: Cascade)

  @@index([contactId])
}
